#!/usr/bin/env python3
"""
Debug the email issue when generating PDF
"""

import os
import requests
import json
from dotenv import load_dotenv

print("🔍 Debugging Email Issue in PDF Generation")
print("=" * 50)

# Load environment variables
load_dotenv()

# Check API key
api_key = os.environ.get('RESEND_API_KEY')
print(f"API Key: {api_key[:15]}..." if api_key else "❌ No API key")

if not api_key:
    print("❌ No RESEND_API_KEY found! Check your .env file.")
    exit(1)

# Check profile
try:
    with open('profile.json', 'r') as f:
        profile = json.load(f)
    print(f"✅ Profile found for: {profile.get('first_name', 'Unknown')} {profile.get('last_name', 'Unknown')}")
    print(f"   Email: {profile.get('email', 'No email')}")
    
    if not profile.get('email'):
        print("❌ No email in profile! Add email to your profile first.")
        exit(1)
        
except FileNotFoundError:
    print("❌ No profile.json found! Set up your profile first.")
    exit(1)

# Test direct email sending (same as in PDF generation)
print(f"\n📧 Testing direct email to: {profile['email']}")

email_params = {
    "from": "Tickety <onboarding@resend.dev>",
    "to": [profile['email']],
    "subject": "🧪 Tickety PDF Email Test",
    "html": f"""
    <div style="font-family: Arial, sans-serif; padding: 20px; background-color: #f5f5f5;">
        <div style="background: white; padding: 20px; border-radius: 8px; box-shadow: 0px 2px 6px rgba(0,0,0,0.1);">
            <h2 style="color: #333;">Hi {profile['first_name']},</h2>
            <p>This is a test email from the PDF generation process.</p>
            <p>If you see this, the email system is working!</p>
            <p style="margin-top: 30px; font-size: 13px; color: #666;">
                This email was automatically generated by Tickety.
            </p>
        </div>
    </div>
    """
}

# Test with SSL handling (same as in app)
import ssl
try:
    import certifi
    session = requests.Session()
    session.verify = certifi.where()
    print("✅ Using certifi SSL certificates")
except ImportError:
    session = requests.Session()
    session.verify = False
    import urllib3
    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
    print("⚠️ Using insecure SSL (development only)")

try:
    print("📡 Sending email...")
    response = session.post(
        'https://api.resend.com/emails',
        headers={
            'Authorization': f'Bearer {api_key}',
            'Content-Type': 'application/json'
        },
        json=email_params,
        timeout=15
    )
    
    print(f"Status Code: {response.status_code}")
    print(f"Response Headers: {dict(response.headers)}")
    print(f"Response Body: {response.text}")
    
    if response.status_code == 200:
        print("\n🎉 EMAIL SENT SUCCESSFULLY!")
        print(f"📧 Check: {profile['email']}")
        print("📧 Also check spam folder")
        print("✅ This means your email system SHOULD work in the PDF generation!")
        
        response_data = response.json()
        if 'id' in response_data:
            print(f"📧 Resend Message ID: {response_data['id']}")
            print("🔍 You should see this activity in your Resend dashboard")
        
    elif response.status_code == 422:
        print("❌ Validation error - check email format or API key")
    elif response.status_code == 401:
        print("❌ Unauthorized - API key is invalid or expired")
    else:
        print(f"❌ Email failed with unexpected status: {response.status_code}")
        print("Check Resend documentation for this error code")
        
except Exception as e:
    print(f"❌ Request failed: {e}")
    
print(f"\n🔧 Troubleshooting:")
print(f"1. Make sure you have an email in your profile: {profile.get('email', 'NOT SET')}")
print(f"2. Check your Resend dashboard: https://resend.com/emails")
print(f"3. Verify API key is valid: {api_key[:15]}...")
print(f"4. Try generating a PDF in the app and check the console output")

print(f"\n💡 If this test succeeds but PDF generation doesn't send email:")
print(f"   - Check the app console for error messages")
print(f"   - Make sure the profile has an email address")
print(f"   - Restart the app: python start_app.py")
